version: "3.5"
services:
  api1: &api # API - Instância 01
    image: rinha/node:latest
    hostname: api1
    depends_on:
      - db
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "0.6GB"
    environment:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_MAX_CONNECTION: 100
      REQ_TIMEOUT: "2000"
      REQ_TIMEOUT_ENABLER: true
      CLUSTER_WORKERS: 2
      POSTGRESQL_TRGM: true
      APP_PORT: 8081
    network_mode: host

  api2:
    <<: *api # API - Instância 02
    hostname: api2
    environment:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_MAX_CONNECTION: 100
      REQ_TIMEOUT: 2000
      REQ_TIMEOUT_ENABLER: true
      CLUSTER_WORKERS: 2
      POSTGRESQL_TRGM: true
      APP_PORT: 8082

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "0.3GB"

  db: # Banco de dados
    command: postgres -c 'max_connections=250'
    image: postgres
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "1.5GB"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    network_mode: host
